<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'templating.engine.php' shared service.

$this->services['templating.engine.php'] = $instance = new \Mautic\CoreBundle\Templating\Engine\PhpEngine(${($_ = isset($this->services['templating.name_parser']) ? $this->services['templating.name_parser'] : ($this->services['templating.name_parser'] = new \Mautic\CoreBundle\Templating\TemplateNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel', 1)) && false ?: '_'}))) && false ?: '_'}, new \Symfony\Component\DependencyInjection\ServiceLocator(['jms_serializer.templating.helper.serializer' => function () {
    return ${($_ = isset($this->services['jms_serializer.templating.helper.serializer']) ? $this->services['jms_serializer.templating.helper.serializer'] : $this->load('getJmsSerializer_Templating_Helper_SerializerService.php')) && false ?: '_'};
}, 'knp_menu.templating.helper' => function () {
    return ${($_ = isset($this->services['knp_menu.templating.helper']) ? $this->services['knp_menu.templating.helper'] : $this->load('getKnpMenu_Templating_HelperService.php')) && false ?: '_'};
}, 'mautic.channel.helper.channel_list' => function () {
    return ${($_ = isset($this->services['mautic.channel.helper.channel_list']) ? $this->services['mautic.channel.helper.channel_list'] : $this->getMautic_Channel_Helper_ChannelListService()) && false ?: '_'};
}, 'mautic.helper.notification' => function () {
    return ${($_ = isset($this->services['mautic.helper.notification']) ? $this->services['mautic.helper.notification'] : $this->load('getMautic_Helper_NotificationService.php')) && false ?: '_'};
}, 'mautic.helper.sms' => function () {
    return ${($_ = isset($this->services['mautic.helper.sms']) ? $this->services['mautic.helper.sms'] : $this->load('getMautic_Helper_SmsService.php')) && false ?: '_'};
}, 'mautic.helper.template.analytics' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.analytics']) ? $this->services['mautic.helper.template.analytics'] : $this->load('getMautic_Helper_Template_AnalyticsService.php')) && false ?: '_'};
}, 'mautic.helper.template.avatar' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.avatar']) ? $this->services['mautic.helper.template.avatar'] : $this->load('getMautic_Helper_Template_AvatarService.php')) && false ?: '_'};
}, 'mautic.helper.template.button' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.button']) ? $this->services['mautic.helper.template.button'] : $this->load('getMautic_Helper_Template_ButtonService.php')) && false ?: '_'};
}, 'mautic.helper.template.canvas' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.canvas']) ? $this->services['mautic.helper.template.canvas'] : $this->load('getMautic_Helper_Template_CanvasService.php')) && false ?: '_'};
}, 'mautic.helper.template.config' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.config']) ? $this->services['mautic.helper.template.config'] : $this->load('getMautic_Helper_Template_ConfigService.php')) && false ?: '_'};
}, 'mautic.helper.template.content' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.content']) ? $this->services['mautic.helper.template.content'] : $this->load('getMautic_Helper_Template_ContentService.php')) && false ?: '_'};
}, 'mautic.helper.template.date' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.date']) ? $this->services['mautic.helper.template.date'] : $this->load('getMautic_Helper_Template_DateService.php')) && false ?: '_'};
}, 'mautic.helper.template.default_avatar' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.default_avatar']) ? $this->services['mautic.helper.template.default_avatar'] : $this->load('getMautic_Helper_Template_DefaultAvatarService.php')) && false ?: '_'};
}, 'mautic.helper.template.dnc_reason' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.dnc_reason']) ? $this->services['mautic.helper.template.dnc_reason'] : $this->load('getMautic_Helper_Template_DncReasonService.php')) && false ?: '_'};
}, 'mautic.helper.template.exception' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.exception']) ? $this->services['mautic.helper.template.exception'] : ($this->services['mautic.helper.template.exception'] = new \Mautic\CoreBundle\Templating\Helper\ExceptionHelper(($this->targetDirs[3].'/app')))) && false ?: '_'};
}, 'mautic.helper.template.formatter' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.formatter']) ? $this->services['mautic.helper.template.formatter'] : $this->load('getMautic_Helper_Template_FormatterService.php')) && false ?: '_'};
}, 'mautic.helper.template.gravatar' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.gravatar']) ? $this->services['mautic.helper.template.gravatar'] : $this->load('getMautic_Helper_Template_GravatarService.php')) && false ?: '_'};
}, 'mautic.helper.template.mautibot' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.mautibot']) ? $this->services['mautic.helper.template.mautibot'] : ($this->services['mautic.helper.template.mautibot'] = new \Mautic\CoreBundle\Templating\Helper\MautibotHelper())) && false ?: '_'};
}, 'mautic.helper.template.menu' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.menu']) ? $this->services['mautic.helper.template.menu'] : $this->load('getMautic_Helper_Template_MenuService.php')) && false ?: '_'};
}, 'mautic.helper.template.security' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.security']) ? $this->services['mautic.helper.template.security'] : $this->load('getMautic_Helper_Template_SecurityService.php')) && false ?: '_'};
}, 'mautic.helper.template.version' => function () {
    return ${($_ = isset($this->services['mautic.helper.template.version']) ? $this->services['mautic.helper.template.version'] : $this->load('getMautic_Helper_Template_VersionService.php')) && false ?: '_'};
}, 'mautic.report.helper.report' => function () {
    return ${($_ = isset($this->services['mautic.report.helper.report']) ? $this->services['mautic.report.helper.report'] : ($this->services['mautic.report.helper.report'] = new \Mautic\ReportBundle\Helper\ReportHelper())) && false ?: '_'};
}, 'oneup_uploader.templating.uploader_helper' => function () {
    return ${($_ = isset($this->services['oneup_uploader.templating.uploader_helper']) ? $this->services['oneup_uploader.templating.uploader_helper'] : $this->load('getOneupUploader_Templating_UploaderHelperService.php')) && false ?: '_'};
}, 'templating.helper.actions' => function () {
    return ${($_ = isset($this->services['templating.helper.actions']) ? $this->services['templating.helper.actions'] : $this->load('getTemplating_Helper_ActionsService.php')) && false ?: '_'};
}, 'templating.helper.assets' => function () {
    return ${($_ = isset($this->services['templating.helper.assets']) ? $this->services['templating.helper.assets'] : $this->getTemplating_Helper_AssetsService()) && false ?: '_'};
}, 'templating.helper.code' => function () {
    return ${($_ = isset($this->services['templating.helper.code']) ? $this->services['templating.helper.code'] : $this->load('getTemplating_Helper_CodeService.php')) && false ?: '_'};
}, 'templating.helper.form' => function () {
    return ${($_ = isset($this->services['templating.helper.form']) ? $this->services['templating.helper.form'] : $this->load('getTemplating_Helper_FormService.php')) && false ?: '_'};
}, 'templating.helper.logout_url' => function () {
    return ${($_ = isset($this->services['templating.helper.logout_url']) ? $this->services['templating.helper.logout_url'] : $this->load('getTemplating_Helper_LogoutUrlService.php')) && false ?: '_'};
}, 'templating.helper.request' => function () {
    return ${($_ = isset($this->services['templating.helper.request']) ? $this->services['templating.helper.request'] : $this->load('getTemplating_Helper_RequestService.php')) && false ?: '_'};
}, 'templating.helper.router' => function () {
    return ${($_ = isset($this->services['templating.helper.router']) ? $this->services['templating.helper.router'] : $this->load('getTemplating_Helper_RouterService.php')) && false ?: '_'};
}, 'templating.helper.security' => function () {
    return ${($_ = isset($this->services['templating.helper.security']) ? $this->services['templating.helper.security'] : $this->load('getTemplating_Helper_SecurityService.php')) && false ?: '_'};
}, 'templating.helper.session' => function () {
    return ${($_ = isset($this->services['templating.helper.session']) ? $this->services['templating.helper.session'] : $this->load('getTemplating_Helper_SessionService.php')) && false ?: '_'};
}, 'templating.helper.slots' => function () {
    return ${($_ = isset($this->services['templating.helper.slots']) ? $this->services['templating.helper.slots'] : ($this->services['templating.helper.slots'] = new \Mautic\CoreBundle\Templating\Helper\SlotsHelper())) && false ?: '_'};
}, 'templating.helper.stopwatch' => function () {
    return ${($_ = isset($this->services['templating.helper.stopwatch']) ? $this->services['templating.helper.stopwatch'] : $this->load('getTemplating_Helper_StopwatchService.php')) && false ?: '_'};
}, 'templating.helper.translator' => function () {
    return ${($_ = isset($this->services['templating.helper.translator']) ? $this->services['templating.helper.translator'] : $this->load('getTemplating_Helper_TranslatorService.php')) && false ?: '_'};
}]), ${($_ = isset($this->services['templating.loader']) ? $this->services['templating.loader'] : $this->load('getTemplating_LoaderService.php')) && false ?: '_'}, ${($_ = isset($this->services['templating.globals']) ? $this->services['templating.globals'] : ($this->services['templating.globals'] = new \Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables($this))) && false ?: '_'});

$instance->setCharset('UTF-8');
$instance->setHelpers(['slots' => 'templating.helper.slots', 'request' => 'templating.helper.request', 'session' => 'templating.helper.session', 'router' => 'templating.helper.router', 'assets' => 'templating.helper.assets', 'actions' => 'templating.helper.actions', 'code' => 'templating.helper.code', 'translator' => 'templating.helper.translator', 'form' => 'templating.helper.form', 'stopwatch' => 'templating.helper.stopwatch', 'logout_url' => 'templating.helper.logout_url', 'security' => 'mautic.helper.template.security', 'knp_menu' => 'knp_menu.templating.helper', 'jms_serializer' => 'jms_serializer.templating.helper.serializer', 'oneup_uploader' => 'oneup_uploader.templating.uploader_helper', 'menu' => 'mautic.helper.template.menu', 'date' => 'mautic.helper.template.date', 'exception' => 'mautic.helper.template.exception', 'gravatar' => 'mautic.helper.template.gravatar', 'analytics' => 'mautic.helper.template.analytics', 'config' => 'mautic.helper.template.config', 'mautibot' => 'mautic.helper.template.mautibot', 'canvas' => 'mautic.helper.template.canvas', 'buttons' => 'mautic.helper.template.button', 'content' => 'mautic.helper.template.content', 'formatter' => 'mautic.helper.template.formatter', 'version' => 'mautic.helper.template.version', 'channel' => 'mautic.channel.helper.channel_list', 'lead_avatar' => 'mautic.helper.template.avatar', 'default_avatar' => 'mautic.helper.template.default_avatar', 'lead_dnc_reason' => 'mautic.helper.template.dnc_reason', 'notification_helper' => 'mautic.helper.notification', 'report' => 'mautic.report.helper.report', 'sms_helper' => 'mautic.helper.sms']);
$instance->setDispatcher(${($_ = isset($this->services['event_dispatcher']) ? $this->services['event_dispatcher'] : $this->getEventDispatcherService()) && false ?: '_'});
$instance->setRequestStack(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())) && false ?: '_'});

return $instance;
