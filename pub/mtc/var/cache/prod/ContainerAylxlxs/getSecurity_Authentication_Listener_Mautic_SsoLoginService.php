<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.authentication.listener.mautic.sso_login' shared service.

return $this->services['security.authentication.listener.mautic.sso_login'] = new \Mautic\UserBundle\Security\Firewall\AuthenticationListener(${($_ = isset($this->services['mautic.security.authentication_handler']) ? $this->services['mautic.security.authentication_handler'] : $this->load('getMautic_Security_AuthenticationHandlerService.php')) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'}, ${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->getLoggerService()) && false ?: '_'}, ${($_ = isset($this->services['event_dispatcher']) ? $this->services['event_dispatcher'] : $this->getEventDispatcherService()) && false ?: '_'}, 'sso_login', ${($_ = isset($this->services['mautic.permission.repository']) ? $this->services['mautic.permission.repository'] : $this->getMautic_Permission_RepositoryService()) && false ?: '_'});
