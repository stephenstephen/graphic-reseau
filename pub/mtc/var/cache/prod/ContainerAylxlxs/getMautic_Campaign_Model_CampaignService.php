<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'mautic.campaign.model.campaign' shared service.

$this->services['mautic.campaign.model.campaign'] = $instance = new \Mautic\CampaignBundle\Model\CampaignModel(${($_ = isset($this->services['mautic.lead.model.list']) ? $this->services['mautic.lead.model.list'] : $this->getMautic_Lead_Model_ListService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.form.model.form']) ? $this->services['mautic.form.model.form'] : $this->getMautic_Form_Model_FormService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.campaign.event_collector']) ? $this->services['mautic.campaign.event_collector'] : $this->load('getMautic_Campaign_EventCollectorService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.campaign.membership.builder']) ? $this->services['mautic.campaign.membership.builder'] : $this->load('getMautic_Campaign_Membership_BuilderService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.tracker.contact']) ? $this->services['mautic.tracker.contact'] : $this->getMautic_Tracker_ContactService()) && false ?: '_'});

$instance->setEntityManager(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->getDoctrine_Orm_DefaultEntityManagerService()) && false ?: '_'});
$instance->setSecurity(${($_ = isset($this->services['mautic.security']) ? $this->services['mautic.security'] : $this->getMautic_SecurityService()) && false ?: '_'});
$instance->setDispatcher(${($_ = isset($this->services['event_dispatcher']) ? $this->services['event_dispatcher'] : $this->getEventDispatcherService()) && false ?: '_'});
$instance->setTranslator(${($_ = isset($this->services['translator.default']) ? $this->services['translator.default'] : $this->getTranslator_DefaultService()) && false ?: '_'});
$instance->setUserHelper(${($_ = isset($this->services['mautic.helper.user']) ? $this->services['mautic.helper.user'] : $this->getMautic_Helper_UserService()) && false ?: '_'});
$instance->setCoreParametersHelper(${($_ = isset($this->services['mautic.helper.core_parameters']) ? $this->services['mautic.helper.core_parameters'] : ($this->services['mautic.helper.core_parameters'] = new \Mautic\CoreBundle\Helper\CoreParametersHelper($this))) && false ?: '_'});
$instance->setRouter(${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'});
$instance->setLogger(${($_ = isset($this->services['monolog.logger.mautic']) ? $this->services['monolog.logger.mautic'] : $this->getMonolog_Logger_MauticService()) && false ?: '_'});

return $instance;
