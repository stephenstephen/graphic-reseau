<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.authentication.listener.lightsaml_sp.main' shared service.

$a = ${($_ = isset($this->services['mautic.security.authentication_handler']) ? $this->services['mautic.security.authentication_handler'] : $this->load('getMautic_Security_AuthenticationHandlerService.php')) && false ?: '_'};

$this->services['security.authentication.listener.lightsaml_sp.main'] = $instance = new \LightSaml\SpBundle\Security\Firewall\LightSamlSpListener(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.manager']) ? $this->services['security.authentication.manager'] : $this->getSecurity_Authentication_ManagerService()) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.session_strategy.dev']) ? $this->services['security.authentication.session_strategy.dev'] : ($this->services['security.authentication.session_strategy.dev'] = new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate'))) && false ?: '_'}, ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->load('getSecurity_HttpUtilsService.php')) && false ?: '_'}, 'main', new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler($a, ['login_path' => $this->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false], 'main'), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler($a, ['login_path' => $this->getEnv('MAUTIC_SAML_LOGIN_PATH'), 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path']), ['check_path' => $this->getEnv('MAUTIC_SAML_LOGIN_CHECK_PATH'), 'use_forward' => false, 'require_previous_session' => false], ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->load('getMonolog_Logger_SecurityService.php')) && false ?: '_'}, ${($_ = isset($this->services['event_dispatcher']) ? $this->services['event_dispatcher'] : $this->getEventDispatcherService()) && false ?: '_'});

$instance->setProfile(${($_ = isset($this->services['ligthsaml.profile.acs']) ? $this->services['ligthsaml.profile.acs'] : $this->load('getLigthsaml_Profile_AcsService.php')) && false ?: '_'});
$instance->setRememberMeServices(${($_ = isset($this->services['security.authentication.rememberme.services.simplehash.main']) ? $this->services['security.authentication.rememberme.services.simplehash.main'] : $this->load('getSecurity_Authentication_Rememberme_Services_Simplehash_MainService.php')) && false ?: '_'});

return $instance;
