<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'lightsaml.container.system' shared service.

return $this->services['lightsaml.container.system'] = new \LightSaml\SymfonyBridgeBundle\Bridge\Container\SystemContainer(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())) && false ?: '_'}, ${($_ = isset($this->services['session']) ? $this->services['session'] : $this->getSessionService()) && false ?: '_'}, ${($_ = isset($this->services['lightsaml.system.time_provider']) ? $this->services['lightsaml.system.time_provider'] : ($this->services['lightsaml.system.time_provider'] = new \LightSaml\Provider\TimeProvider\SystemTimeProvider())) && false ?: '_'}, ${($_ = isset($this->services['lightsaml.system.event_dispatcher']) ? $this->services['lightsaml.system.event_dispatcher'] : ($this->services['lightsaml.system.event_dispatcher'] = new \Symfony\Component\EventDispatcher\EventDispatcher())) && false ?: '_'}, ${($_ = isset($this->services['lightsaml.system.logger']) ? $this->services['lightsaml.system.logger'] : ($this->services['lightsaml.system.logger'] = new \Psr\Log\NullLogger())) && false ?: '_'});
