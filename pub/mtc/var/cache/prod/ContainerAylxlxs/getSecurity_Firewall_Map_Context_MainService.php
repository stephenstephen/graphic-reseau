<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.firewall.map.context.main' shared service.

$a = ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())) && false ?: '_'};
$b = ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->load('getSecurity_HttpUtilsService.php')) && false ?: '_'};
$c = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $b, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($b, '/s/login'), ['csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'logout', 'logout_path' => '/s/logout']);
$c->addHandler(new \Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler(${($_ = isset($this->services['security.csrf.token_storage']) ? $this->services['security.csrf.token_storage'] : $this->getSecurity_Csrf_TokenStorageService()) && false ?: '_'}));
$c->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());
$c->addHandler(${($_ = isset($this->services['mautic.security.logout_handler']) ? $this->services['mautic.security.logout_handler'] : $this->load('getMautic_Security_LogoutHandlerService.php')) && false ?: '_'});
$c->addHandler(${($_ = isset($this->services['security.authentication.rememberme.services.simplehash.main']) ? $this->services['security.authentication.rememberme.services.simplehash.main'] : $this->load('getSecurity_Authentication_Rememberme_Services_Simplehash_MainService.php')) && false ?: '_'});

return $this->services['security.firewall.map.context.main'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->load('getSecurity_ChannelListenerService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['security.context_listener.1']) ? $this->services['security.context_listener.1'] : $this->load('getSecurity_ContextListener_1Service.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['security.authentication.listener.fos_oauth_server.main']) ? $this->services['security.authentication.listener.fos_oauth_server.main'] : $this->load('getSecurity_Authentication_Listener_FosOauthServer_MainService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['security.authentication.listener.bazinga_oauth.main']) ? $this->services['security.authentication.listener.bazinga_oauth.main'] : $this->load('getSecurity_Authentication_Listener_BazingaOauth_MainService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['security.authentication.listener.simple_form.main']) ? $this->services['security.authentication.listener.simple_form.main'] : $this->load('getSecurity_Authentication_Listener_SimpleForm_MainService.php')) && false ?: '_'};
    yield 5 => ${($_ = isset($this->services['security.authentication.listener.lightsaml_sp.main']) ? $this->services['security.authentication.listener.lightsaml_sp.main'] : $this->load('getSecurity_Authentication_Listener_LightsamlSp_MainService.php')) && false ?: '_'};
    yield 6 => ${($_ = isset($this->services['security.authentication.listener.rememberme.main']) ? $this->services['security.authentication.listener.rememberme.main'] : $this->load('getSecurity_Authentication_Listener_Rememberme_MainService.php')) && false ?: '_'};
    yield 7 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->load('getSecurity_AccessListenerService.php')) && false ?: '_'};
}, 8), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : ($this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken'))) && false ?: '_'}, $b, 'main', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint(${($_ = isset($this->services['http_kernel']) ? $this->services['http_kernel'] : $this->getHttpKernelService()) && false ?: '_'}, $b, $this->getEnv('MAUTIC_SAML_LOGIN_PATH'), false), NULL, NULL, ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->load('getMonolog_Logger_SecurityService.php')) && false ?: '_'}, false), $c, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('main', 'security.user_checker', 'security.request_matcher.1oik8qd', true, false, 'mautic.user.provider', 'mautic', 'security.authentication.form_entry_point.main', NULL, NULL, [0 => 'fos_oauth', 1 => 'bazinga_oauth', 2 => 'simple_form', 3 => 'light_saml_sp', 4 => 'remember_me'], NULL));
