<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'mautic.email.model.email' shared service.

$this->services['mautic.email.model.email'] = $instance = new \Mautic\EmailBundle\Model\EmailModel(${($_ = isset($this->services['mautic.helper.ip_lookup']) ? $this->services['mautic.helper.ip_lookup'] : $this->getMautic_Helper_IpLookupService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.helper.theme']) ? $this->services['mautic.helper.theme'] : $this->getMautic_Helper_ThemeService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.helper.mailbox']) ? $this->services['mautic.helper.mailbox'] : $this->load('getMautic_Helper_MailboxService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.helper.mailer']) ? $this->services['mautic.helper.mailer'] : $this->getMautic_Helper_MailerService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.lead.model.lead']) ? $this->services['mautic.lead.model.lead'] : $this->getMautic_Lead_Model_LeadService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.lead.model.company']) ? $this->services['mautic.lead.model.company'] : $this->getMautic_Lead_Model_CompanyService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.page.model.trackable']) ? $this->services['mautic.page.model.trackable'] : $this->getMautic_Page_Model_TrackableService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.user.model.user']) ? $this->services['mautic.user.model.user'] : $this->getMautic_User_Model_UserService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.channel.model.queue']) ? $this->services['mautic.channel.model.queue'] : $this->load('getMautic_Channel_Model_QueueService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.email.model.send_email_to_contacts']) ? $this->services['mautic.email.model.send_email_to_contacts'] : $this->load('getMautic_Email_Model_SendEmailToContactsService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.tracker.device']) ? $this->services['mautic.tracker.device'] : $this->getMautic_Tracker_DeviceService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.page.repository.redirect']) ? $this->services['mautic.page.repository.redirect'] : $this->load('getMautic_Page_Repository_RedirectService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.helper.cache_storage']) ? $this->services['mautic.helper.cache_storage'] : $this->load('getMautic_Helper_CacheStorageService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.tracker.contact']) ? $this->services['mautic.tracker.contact'] : $this->getMautic_Tracker_ContactService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.lead.model.dnc']) ? $this->services['mautic.lead.model.dnc'] : $this->load('getMautic_Lead_Model_DncService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.generated.columns.provider']) ? $this->services['mautic.generated.columns.provider'] : $this->load('getMautic_Generated_Columns_ProviderService.php')) && false ?: '_'});

$instance->setEntityManager(${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->getDoctrine_Orm_DefaultEntityManagerService()) && false ?: '_'});
$instance->setSecurity(${($_ = isset($this->services['mautic.security']) ? $this->services['mautic.security'] : $this->getMautic_SecurityService()) && false ?: '_'});
$instance->setDispatcher(${($_ = isset($this->services['event_dispatcher']) ? $this->services['event_dispatcher'] : $this->getEventDispatcherService()) && false ?: '_'});
$instance->setTranslator(${($_ = isset($this->services['translator.default']) ? $this->services['translator.default'] : $this->getTranslator_DefaultService()) && false ?: '_'});
$instance->setUserHelper(${($_ = isset($this->services['mautic.helper.user']) ? $this->services['mautic.helper.user'] : $this->getMautic_Helper_UserService()) && false ?: '_'});
$instance->setCoreParametersHelper(${($_ = isset($this->services['mautic.helper.core_parameters']) ? $this->services['mautic.helper.core_parameters'] : ($this->services['mautic.helper.core_parameters'] = new \Mautic\CoreBundle\Helper\CoreParametersHelper($this))) && false ?: '_'});
$instance->setRouter(${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'});
$instance->setLogger(${($_ = isset($this->services['monolog.logger.mautic']) ? $this->services['monolog.logger.mautic'] : $this->getMonolog_Logger_MauticService()) && false ?: '_'});

return $instance;
