<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'lightsaml.service.endpoint_resolver' shared service.

$this->services['lightsaml.service.endpoint_resolver'] = $instance = new \LightSaml\Resolver\Endpoint\CompositeEndpointResolver();

$instance->add(${($_ = isset($this->services['lightsaml.service.endpoint_resolver.binding']) ? $this->services['lightsaml.service.endpoint_resolver.binding'] : ($this->services['lightsaml.service.endpoint_resolver.binding'] = new \LightSaml\Resolver\Endpoint\BindingEndpointResolver())) && false ?: '_'});
$instance->add(${($_ = isset($this->services['lightsaml.service.endpoint_resolver.descriptor_type']) ? $this->services['lightsaml.service.endpoint_resolver.descriptor_type'] : ($this->services['lightsaml.service.endpoint_resolver.descriptor_type'] = new \LightSaml\Resolver\Endpoint\DescriptorTypeEndpointResolver())) && false ?: '_'});
$instance->add(${($_ = isset($this->services['lightsaml.service.endpoint_resolver.service_type']) ? $this->services['lightsaml.service.endpoint_resolver.service_type'] : ($this->services['lightsaml.service.endpoint_resolver.service_type'] = new \LightSaml\Resolver\Endpoint\ServiceTypeEndpointResolver())) && false ?: '_'});
$instance->add(${($_ = isset($this->services['lightsaml.service.endpoint_resolver.index']) ? $this->services['lightsaml.service.endpoint_resolver.index'] : ($this->services['lightsaml.service.endpoint_resolver.index'] = new \LightSaml\Resolver\Endpoint\IndexEndpointResolver())) && false ?: '_'});
$instance->add(${($_ = isset($this->services['lightsaml.service.endpoint_resolver.location']) ? $this->services['lightsaml.service.endpoint_resolver.location'] : ($this->services['lightsaml.service.endpoint_resolver.location'] = new \LightSaml\Resolver\Endpoint\LocationEndpointResolver())) && false ?: '_'});

return $instance;
