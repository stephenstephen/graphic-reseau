<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'mautic.integrations.sync.service' shared service.

$this->services['mautic.integrations.sync.service'] = $instance = new \Mautic\IntegrationsBundle\Sync\SyncService\SyncService(${($_ = isset($this->services['mautic.integrations.sync.data_exchange.mautic']) ? $this->services['mautic.integrations.sync.data_exchange.mautic'] : $this->load('getMautic_Integrations_Sync_DataExchange_MauticService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.integrations.helper.sync_date']) ? $this->services['mautic.integrations.helper.sync_date'] : $this->load('getMautic_Integrations_Helper_SyncDateService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.integrations.helper.sync_mapping']) ? $this->services['mautic.integrations.helper.sync_mapping'] : $this->load('getMautic_Integrations_Helper_SyncMappingService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.integrations.sync.helper.relations']) ? $this->services['mautic.integrations.sync.helper.relations'] : $this->load('getMautic_Integrations_Sync_Helper_RelationsService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.integrations.helper.sync_integrations']) ? $this->services['mautic.integrations.helper.sync_integrations'] : $this->load('getMautic_Integrations_Helper_SyncIntegrationsService.php')) && false ?: '_'}, ${($_ = isset($this->services['event_dispatcher']) ? $this->services['event_dispatcher'] : $this->getEventDispatcherService()) && false ?: '_'}, ${($_ = isset($this->services['mautic.integrations.sync.notifier']) ? $this->services['mautic.integrations.sync.notifier'] : $this->load('getMautic_Integrations_Sync_NotifierService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.integrations.sync.integration_process']) ? $this->services['mautic.integrations.sync.integration_process'] : $this->load('getMautic_Integrations_Sync_IntegrationProcessService.php')) && false ?: '_'}, ${($_ = isset($this->services['mautic.integrations.sync.internal_process']) ? $this->services['mautic.integrations.sync.internal_process'] : $this->load('getMautic_Integrations_Sync_InternalProcessService.php')) && false ?: '_'});

$instance->initiateDebugLogger(${($_ = isset($this->services['mautic.sync.logger']) ? $this->services['mautic.sync.logger'] : $this->load('getMautic_Sync_LoggerService.php')) && false ?: '_'});

return $instance;
